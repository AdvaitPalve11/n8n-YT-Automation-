{
  "name": "Local AI Bulk Video Generator",
  "nodes": [
    {
      "parameters": {},
      "id": "cron-trigger-bulk",
      "name": "Every 12 Hours",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "bulk-video-cron",
      "credentials": {},
      "disabled": false,
      "cronExpression": "0 */12 * * *"
    },
    {
      "parameters": {
        "url": "http://host.docker.internal:8000/generate-bulk-videos",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "csv_path",
              "value": "prompts.csv"
            },
            {
              "name": "backend",
              "value": "manim"
            },
            {
              "name": "duration",
              "value": "5"
            }
          ]
        },
        "options": {
          "timeout": 3600000,
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "generate-bulk-videos",
      "name": "Generate Bulk Videos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 300],
      "credentials": {},
      "notes": "Calls local Python endpoint to generate multiple videos from prompts.csv"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.body.status}}",
              "operation": "equals",
              "value2": "success"
            }
          ]
        }
      },
      "id": "check-status",
      "name": "Check Status",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [680, 300],
      "notes": "Route based on generation success or failure"
    },
    {
      "parameters": {
        "jsCode": "// Extract video paths from response\nconst response = items[0].json.body;\nconst videos = response.videos || [];\n\n// Create one item per video for processing\nreturn videos.map(video => ({\n  json: {\n    name: video.name,\n    variation: video.variation,\n    path: video.path,\n    total_videos: response.total_videos,\n    successful: response.successful,\n    backend: response.backend\n  }\n}));"
      },
      "id": "split-videos",
      "name": "Split Videos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 200],
      "notes": "Split response into individual video items"
    },
    {
      "parameters": {
        "operation": "upload",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.path }}",
          "mode": "id"
        },
        "driveId": {
          "__rl": true,
          "value": "My Drive",
          "mode": "list",
          "cachedResultName": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "n8n workflows",
          "mode": "list",
          "cachedResultName": "n8n workflows"
        },
        "options": {
          "fileName": "={{$json.name}}_v{{$json.variation}}.mp4"
        }
      },
      "id": "upload-to-drive",
      "name": "Upload to Google Drive (Optional)",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [1120, 200],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "google-drive-creds",
          "name": "Google Drive account"
        }
      },
      "disabled": true,
      "notes": "Optional: Upload to Google Drive (enable if needed)"
    },
    {
      "parameters": {
        "jsCode": "// Generate summary report\nconst response = items[0].json.body;\n\nreturn [{\n  json: {\n    status: \"Bulk Generation Complete\",\n    total: response.total_videos,\n    successful: response.successful,\n    failed: response.failed,\n    backend: response.backend,\n    output_dir: response.output_directory,\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "create-summary",
      "name": "Create Summary",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300],
      "notes": "Generate completion summary"
    },
    {
      "parameters": {
        "jsCode": "// Error handling\nconst response = items[0].json.body;\n\nreturn [{\n  json: {\n    status: \"Generation Failed\",\n    error: response.message || \"Unknown error\",\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "handle-error",
      "name": "Handle Error",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 400],
      "notes": "Handle generation failures"
    }
  ],
  "connections": {
    "Every 12 Hours": {
      "main": [
        [
          {
            "node": "Generate Bulk Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Bulk Videos": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Split Videos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Handle Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Videos": {
      "main": [
        [
          {
            "node": "Upload to Google Drive (Optional)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-10-21T00:00:00.000Z",
  "versionId": "1"
}
